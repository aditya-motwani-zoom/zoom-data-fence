name: build-deploy
on:
  push:
    branches:
      # Build Snapshots From Main
      - main
    tags:
      # Build Releases From Tags
      - v*.*.*
jobs:
  get-version:
    environment: deploy
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      deploy: ${{ steps.determine-deploy.outputs.deploy }}
      release: $${{ steps.determine-deploy.outputs.release }}
      java-version: ${{ steps.set-constants.outputs.java-version }}
      java-distribution: ${{ steps.set-constants.outputs.java-distribution }}
    steps:
    - uses: actions/checkout@v4
    - name: Set Constants
      id: set-constants
      run: |
        echo "::set-output name=java-version::17"
        echo "::set-output name=java-distribution::temurin"
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ steps.set-constants.outputs.java-version }}
        distribution: ${{ steps.set-constants.outputs.java-distribution }}
        cache: maven
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: get-version
    - name: Print Version
      env:
        VERSION: ${{ steps.get-version.outputs.version }}
      run: echo "version=${VERSION}"
    - name: Determine if Deploy
      id: determine-deploy
      # We want to build releases from tags matching the correct pattern and matching the pom version.
      # We want to build snapshot releases from any push to main.
      env:
        VERSION: ${{ steps.get-version.outputs.version }}
        REF: ${{ github.ref }}
      run: |
        if [ "refs/tags/v${VERSION}" = "${REF}" ] && [ "${VERSION}" ~= "[0-9]+.[0-9]+.[0-9]" ]; then
          echo "::set-output name=deploy::true"
          echo "::set-output name=release::true"
        elif [ "${REF}" = "refs/head/main" ] && [ "${VERSION}" ~=  "[0-9]+.[0-9]+.[0-9]-SNAPSHOT" ]; then
          echo "::set-output name=deploy::true"
          echo "::set-output name=release::false"
        else
          echo "::set-output name=deploy::false"
        fi
    - name: Print Deploy
      id: print-deploy
      env:
        DEPLOY: ${{ steps.determine-deploy.outputs.deploy }}
      run: echo "deploy=${DEPLOY}"
  deploy-docker:
    uses: ./.github/workflows/deploy-docker.yml
    needs:
      - get-version
    with:
      deploy: ${{ needs.get-version.outputs.deploy }}
      version: ${{ needs.get-version.outputs.version }}
      release: ${{ needs.get-version.outputs.release }}
  deploy-maven:
    uses: ./.github/workflows/deploy-maven.yml
    needs:
      - get-version
    with:
      deploy: ${{ needs.get-version.outputs.deploy }}
      version: ${{ needs.get-version.outputs.version }}
      release: ${{ needs.get-version.outputs.release }}
      java-version: ${{ needs.get-version.outputs.java-version }}
      java-distribution: ${{ needs.get-version.outputs.java-distribution }}

